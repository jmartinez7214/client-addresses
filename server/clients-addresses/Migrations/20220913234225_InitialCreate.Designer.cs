// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using clients_addresses.Data;

#nullable disable

namespace clients_addresses.Migrations
{
    [DbContext(typeof(CompanyXDbContext))]
    [Migration("20220913234225_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("clients_addresses.Data.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Samuel",
                            LastName = "Polanco"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Juan",
                            LastName = "Perez"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Francisco",
                            LastName = "Rivera"
                        });
                });

            modelBuilder.Entity("clients_addresses.Data.Models.ClientAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientAddresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "558 Henry Smith St., Southfield, MI 48076",
                            ClientId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "174 Prince Street, Hickory, NC 28601",
                            ClientId = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "58 River St., Findlay, OH 45840",
                            ClientId = 2
                        },
                        new
                        {
                            Id = 4,
                            Address = "7387 Myers Ave., Saint Joseph, MI 49085",
                            ClientId = 2
                        },
                        new
                        {
                            Id = 5,
                            Address = "8228 Philmont Ave., Marshalltown, IA 50158",
                            ClientId = 2
                        },
                        new
                        {
                            Id = 6,
                            Address = "7531 Thompson Drive, New York, NY 10002",
                            ClientId = 2
                        },
                        new
                        {
                            Id = 7,
                            Address = "60 Dogwood Street, Vicksburg, MS 39180",
                            ClientId = 3
                        },
                        new
                        {
                            Id = 8,
                            Address = "13 Alton St., South Richmond Hill, NY 11419",
                            ClientId = 3
                        },
                        new
                        {
                            Id = 9,
                            Address = "7626 E. Armstrong Lane, Dickson, TN 37055",
                            ClientId = 3
                        });
                });

            modelBuilder.Entity("clients_addresses.Data.Models.ClientAddress", b =>
                {
                    b.HasOne("clients_addresses.Data.Models.Client", "Client")
                        .WithMany("ClientAddresses")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("clients_addresses.Data.Models.Client", b =>
                {
                    b.Navigation("ClientAddresses");
                });
#pragma warning restore 612, 618
        }
    }
}
